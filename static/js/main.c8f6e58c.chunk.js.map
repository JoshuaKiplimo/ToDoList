{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","item","removeItem","editItem","className","map","id","title","key","type","onClick","Alert","msg","removeAlert","groceryList","useEffect","timeout","setTimeout","clearTimeout","App","useState","groceryValue","setGroceryValue","localStorage","getItem","JSON","parse","setGroceryList","show","alert","setAlert","isEditing","setisEditing","editID","setEditID","showAlert","setItem","stringify","placeholder","name","value","onChange","e","target","preventDefault","newItem","Date","getTime","toString","console","log","toRemove","filter","items","filtered","toEdit","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8f6e58c.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nconst List = ({ item, removeItem, editItem }) => {\n  //console.log(removeItem);\n  return (\n    <>\n      <article className=\"grocery-list\">\n        {item.map((item) => {\n          const { id, title } = item;\n          return (\n            <article key={id} className=\"grocery-item\">\n              <p className=\"title\">{title}</p>\n              <div className=\"btn-continer\">\n                <button type=\"button\" className=\"edit-btn\">\n                  <FaEdit onClick={() => editItem(id)} />\n                </button>\n                <button className=\"delete-btn\">\n                  <FaTrash onClick={() => removeItem(id)} />\n                </button>\n              </div>\n            </article>\n          );\n        })}\n      </article>\n    </>\n  );\n};\n\nexport default List;\n","import React, { useEffect } from \"react\";\n\nconst Alert = ({ type, msg, removeAlert, groceryList }) => {\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      removeAlert();\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [groceryList]);\n  //console.log(props.alert);\n  //use effect to toggle show and hide for a few seconds display: none\n  //\n  return <p className={`alert alert-${type}`}>{msg}</p>;\n};\n\nexport default Alert;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"groceryList\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"groceryList\"));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [groceryValue, setGroceryValue] = useState(\"\");\n  const [groceryList, setGroceryList] = useState(getLocalStorage());\n  //const [alert, setAlert] = useState(false);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\",\n  });\n  const [isEditing, setisEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const submitData = (e) => {\n    e.preventDefault();\n    if (!groceryValue) {\n      //display alert: msg\n\n      showAlert(true, \"danger\", \"please enter value\");\n    } else if (groceryValue && isEditing) {\n      groceryList.map((item) => {\n        if (item.id === editID) {\n          item.title = groceryValue;\n          // return { ...item, title: groceryValue };\n        } else {\n          return item;\n        }\n      });\n      const editingValue = {\n        show: true,\n        msg: \"value changed\",\n        type: \"success\",\n      };\n      setAlert(editingValue);\n      setGroceryValue(\"\");\n      setisEditing(false);\n      setEditID(null);\n    } else {\n      //show alert\n      showAlert(true, \"success\", \"added to list\");\n      //add item to list\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: groceryValue,\n      };\n      setGroceryList([...groceryList, newItem]);\n      setGroceryValue(\"\");\n    }\n  };\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({ show, type, msg });\n  };\n  const removeItem = (id) => {\n    console.log(\"del item\", id);\n    const toRemove = groceryList.filter((items) => items.id === id)[0].title;\n    console.log(toRemove);\n    const filtered = groceryList.filter((items) => items.id !== id);\n    console.log(\"to delete\");\n    console.log(filtered);\n    setGroceryList(filtered);\n\n    showAlert(true, \"danger\", `${toRemove}  removed`);\n  };\n  const editItem = (id) => {\n    const toEdit = groceryList.find((items) => items.id === id);\n    console.log(toEdit.title);\n    setGroceryValue(toEdit.title);\n    setEditID(id);\n    setisEditing(true);\n  };\n  useEffect(() => {\n    //save local values\n    //Reason we use use effect : every time list changes update values in local storage\n    localStorage.setItem(\"groceryList\", JSON.stringify(groceryList));\n  }, [groceryList]);\n  return (\n    <>\n      <main>\n        <section className=\"section-center\">\n          <form className=\"grocery-form\">\n            {alert.show && (\n              <Alert\n                {...alert}\n                removeAlert={showAlert}\n                groceryList={groceryList}\n              />\n            )}\n            <h3>Grocery bud</h3>\n            <div className=\"form-control\">\n              <input\n                className=\"grocery\"\n                type=\"text\"\n                placeholder=\"e.g eggs\"\n                name=\"grocery\"\n                id=\"grocery\"\n                value={groceryValue}\n                onChange={(e) => setGroceryValue(e.target.value)}\n              ></input>\n\n              <button onClick={submitData} className=\"submit-btn\">\n                {isEditing ? \"edit\" : \"submit\"}\n              </button>\n            </div>\n          </form>\n\n          <article className=\"grocery-container\">\n            <List\n              item={groceryList}\n              removeItem={removeItem}\n              editItem={editItem}\n            />\n            <button\n              className=\"clear-btn\"\n              onClick={() => {\n                showAlert(true, \"success\", \"items successfully removed\");\n                setGroceryList([]);\n              }}\n            >\n              Clear Items\n            </button>\n          </article>\n        </section>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}